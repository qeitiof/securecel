-- 1. Quantas apólices estão ativas hoje?
SELECT COUNT(DISTINCT a.apolice_id) AS total_ativas
FROM Apolices a
JOIN Detalhes_Apolices d ON a.apolice_id = d.apolice_id
WHERE d.status = 'Ativa'
  AND GETDATE() BETWEEN d.data_inicio AND d.data_fim;

-- 2. Quais clientes possuem múltiplas apólices ativas, e quais os planos contratados?
SELECT 
  c.nome AS cliente,
  COUNT(DISTINCT a.apolice_id) AS total_apolices,
  STRING_AGG(pl.nome_plano, ', ') AS planos
FROM Clientes c
JOIN Apolices a ON c.cliente_id = a.cliente_id
JOIN Detalhes_Apolices d ON a.apolice_id = d.apolice_id
JOIN Planos pl ON a.plano_id = pl.plano_id
WHERE d.status = 'Ativa'
GROUP BY c.nome
HAVING COUNT(DISTINCT a.apolice_id) > 1
ORDER BY total_apolices DESC;

-- 3. Quantos sinistros foram registrados neste mês e qual o tipo mais comum?
SELECT 
  COUNT(*) AS total_sinistros,
  tipo_ocorrencia,
  COUNT(*) * 100.0 / SUM(COUNT(*)) OVER () AS percentual
FROM Sinistros
WHERE MONTH(data_ocorrencia) = MONTH(GETDATE())
  AND YEAR(data_ocorrencia) = YEAR(GETDATE())
GROUP BY tipo_ocorrencia
ORDER BY total_sinistros DESC;

-- 4. Quais são os planos mais contratados e a média de valor pago por apólice?
SELECT 
  p.nome_plano,
  COUNT(a.apolice_id) AS total_contratos,
  AVG(pl.valor_mensal) AS valor_medio_mensal,
  SUM(pag.valor_pago) AS receita_total
FROM Apolices a
JOIN Planos p ON a.plano_id = p.plano_id
JOIN Pagamentos pag ON a.apolice_id = pag.apolice_id AND pag.status = 'Pago'
GROUP BY p.nome_plano
ORDER BY total_contratos DESC;

-- 5. Receita dos últimos 3 meses por plano ativo (com CTE)
WITH PagamentosRecentes AS (
    SELECT 
        a.plano_id,
        p.valor_pago,
        FORMAT(p.data_pagamento, 'yyyy-MM') AS mes
    FROM Pagamentos p
    JOIN Apolices a ON p.apolice_id = a.apolice_id
    JOIN Detalhes_Apolices d ON d.apolice_id = a.apolice_id
    WHERE p.status = 'Pago'
      AND d.status = 'Ativa'
      AND p.data_pagamento >= DATEADD(MONTH, -3, GETDATE())
)
SELECT 
    pl.nome_plano,
    pr.mes,
    SUM(pr.valor_pago) AS receita_total_mes
FROM PagamentosRecentes pr
JOIN Planos pl ON pr.plano_id = pl.plano_id
GROUP BY pl.nome_plano, pr.mes
ORDER BY pl.nome_plano, pr.mes;

-- 6. Função para calcular duração da apólice e listagem por cliente

-- Criação da função escalar
CREATE FUNCTION dbo.fn_DuracaoApolice (@apolice_id INT)
RETURNS INT
AS
BEGIN
    DECLARE @dias INT;
    SELECT @dias = DATEDIFF(DAY, data_inicio, data_fim)
    FROM Detalhes_Apolices
    WHERE apolice_id = @apolice_id;
    RETURN @dias;
END;

-- Consulta usando a função criada
SELECT 
    a.apolice_id,
    c.nome AS cliente,
    p.nome_plano,
    dbo.fn_DuracaoApolice(a.apolice_id) AS dias_de_cobertura
FROM Apolices a
JOIN Clientes c ON a.cliente_id = c.cliente_id
JOIN Planos p ON a.plano_id = p.plano_id
ORDER BY dias_de_cobertura DESC;
